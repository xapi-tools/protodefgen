// This is an example file
// Autogenerated by protodefgen

syntax = "proto3";

package example;

import "google/protobuf/empty.proto";

// This is an Enum with global scope
enum GlobalEnum {
    // This is variant Z
    VARIANT_Z = 0;
    // This is variant A
    VARIANT_A = 1;
    // This is variant B
    VARIANT_B = 2;
}

// This message contains basic types
message BasicType {
    // This is required string field
    string name = 1;
    // This is optional numeric field
    optional uint32 num = 2;
    // This is optional enum field
    optional GlobalEnum global_enum = 3;
}

// This message contains list types
message ListType {
    // This is list of strings
    repeated string names = 1;
    // This is list of numbers
    repeated uint32 num = 2;
    // This is list of enums
    repeated GlobalEnum global_enums = 3;
}

// This message contains complex types
message ComplexType {
    // This is an Enum with message scope
    enum NestedEnum {
        // This is variant Z
        VARIANT_Z = 0;
        // This is variant A
        VARIANT_A = 1;
        // This is variant B
        VARIANT_B = 2;
    }

    // This is a nested message
    message NestedMessage {
        // This is a double nested Enum with message scope
        enum DoublyNestedEnum {
            // This is variant Z
            VARIANT_Z = 0;
            // This is variant A
            VARIANT_A = 1;
            // This is variant B
            VARIANT_B = 2;
        }

        // This is required string field
        string name = 1;
        // This is optional numeric field
        optional uint32 num = 2;
        // This is optional enum field
        optional GlobalEnum global_enum = 3;
    }

    // This holds BasicType
    BasicType basic = 1;
    // This holds ListType
    ListType list = 2;
    // This holds NestedMessage
    NestedMessage nested_message = 3;
    // This holds NestedEnum
    NestedEnum nested_enum = 4;
    // This holds DoublyNestedEnum
    NestedMessage.DoublyNestedEnum doubly_nested_enum = 5;
}

// This is a service exercising BasicType
service BasicService {
    // Get BasicType
    rpc GetBasic(google.protobuf.Empty) returns (BasicType);
    // Push BasicType
    rpc PushBasic(BasicType) returns (google.protobuf.Empty);
}

// This is a service exercising ComplexType
service ComplexService {
    // RPC with streaming request
    rpc StreamRequest(stream BasicType) returns (google.protobuf.Empty);
    // RPC with streaming response
    rpc StreamResponse(google.protobuf.Empty) returns (stream BasicType);
    // RPC with bidirectional streaming
    rpc StreamRequestResponse(stream BasicType) returns (stream ComplexType);
}

